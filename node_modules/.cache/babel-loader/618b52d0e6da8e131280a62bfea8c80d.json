{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kokisakano/tutorial/react-tutorial/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createPortal } from \"react-dom/cjs/react-dom.development\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const squareBoard = [];\n\n    for (let i = 0; i < 3; i++) {\n      let rowBoard = [];\n\n      for (let j = 0; j < 3; j++) {\n        rowBoard.push(this.renderSquare(j + 3 * j));\n      }\n\n      squareBoard.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: rowBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squareBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      ascending: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares)[0] || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNum = this.state.stepNumber;\n    const current = history[stepNum];\n    const arrWin = calculateWinner(current.squares);\n    const winner = arrWin[0];\n    const winState = arrWin[1];\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: move === stepNum ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 31\n          }, this) : desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner === \"draw\") {\n      status = \"Draw\";\n    } else if (winner) {\n      status = \"Winner: \" + winner;\n\n      for (let i = 0; i < 3; i++) {\n        current.squares[winState[i]] = /*#__PURE__*/_jsxDEV(\"font\", {\n          color: \"#F00\",\n          children: current.squares[winState[i]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 48\n        }, this);\n      }\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    if (!this.state.ascending) moves.reverse();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              ascending: true\n            });\n          },\n          children: \"昇順\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              ascending: false\n            });\n          },\n          children: \"降順\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [squares[a], lines[i]];\n    }\n  }\n\n  if (squares.indexOf(null) === -1) return [\"draw\", []];\n  return [null, []];\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/kokisakano/tutorial/react-tutorial/src/index.js"],"names":["React","ReactDOM","createPortal","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","squareBoard","rowBoard","j","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","ascending","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","stepNum","arrWin","winner","winState","moves","map","move","desc","status","reverse","document","getElementById","lines","a","b","c","indexOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createPortal } from \"react-dom/cjs/react-dom.development\";\n\nimport \"./index.css\";\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        const squareBoard = [];\n        for(let i=0; i<3; i++){\n            let rowBoard = [];\n            for(let j=0;j<3; j++){\n                rowBoard.push(this.renderSquare(j+3*j));\n            }\n            squareBoard.push(\n                <div className=\"board-row\">\n                    {rowBoard}\n                </div>\n            )\n        }\n        return (\n            <div>\n                {squareBoard}\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            stepNumber: 0,\n            xIsNext: true,\n            ascending: true,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares)[0] || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n            history: history.concat([\n                {\n                    squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const stepNum = this.state.stepNumber;\n        const current = history[stepNum];\n        const arrWin = calculateWinner(current.squares);\n        const winner = arrWin[0];\n        const winState = arrWin[1];\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>\n                        {move === stepNum\n                            ? <b>{desc}</b>\n                            : desc\n                        }\n                    </button>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner === \"draw\") {\n            status = \"Draw\";\n        } else if (winner) {\n            status = \"Winner: \" + winner;\n            for(let i=0; i<3; i++){\n                current.squares[winState[i]] = <font color=\"#F00\">{current.squares[winState[i]]}</font>;\n            }\n        } else {\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        }\n\n        if(! this.state.ascending) moves.reverse();\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <button\n                        onClick={() => {this.setState({ascending:true,});}}>\n                        {\"昇順\"}\n                    </button>\n                    <button\n                        onClick={() => {this.setState({ascending:false,});}}>\n                        {\"降順\"}\n                    </button>\n                    <ol>\n                        {moves}\n                    </ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return [squares[a], lines[i]];\n        }\n    }\n\n    if (squares.indexOf(null) === -1) return [\"draw\", []];\n\n    return [null, []];\n}\n"]},"metadata":{},"sourceType":"module"}